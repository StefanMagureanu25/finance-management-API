generator client {
  provider        = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
    
model User {
  id    String  @id @default(uuid())
  name  String
  email String  @unique 
  password String
  role Role @default(USER)
  budget Decimal? @default(0)
  transaction Transaction[]
  goalExpense GoalExpense?

  @@index([email])
}
// the amount of cash to be consumed ideally from a given time to a particular time
model GoalExpense{
    id    String     @id @default(uuid())
    desiredAmount String
    startDate DateTime @default(now())
    endDate DateTime // startDate + 30 days (I'll add this when creating a new goalExpense)
    isCompleted Boolean // checks after an update on expenses if totalAmountSpent > desiredAmount
    user User @relation(fields: [userId], references: [id])
    userId String @unique
}
model Transaction{
    id    String     @id @default(uuid())
    amount Decimal
    user User @relation(fields : [userId], references: [id])
    items Item[]
    userId String
    @@index(userId)
}
model Item{
    id Int @id @default(autoincrement())
    name String
    price Decimal
    isUnwanted Boolean 
    categoryName String
    transaction Transaction @relation(fields : [transactionId], references: [id])
    transactionId String
}
// ex: food, travel etc
model Category{
    id   String   @id @default(uuid())
    name String @unique
    totalAmountSpent Decimal // money spent on this category among all the transactions
    cap Decimal?
}

enum Role {
  USER
  ADMIN
}