1. Add a budget to spend for a particular user (ex: salary). done
2. Register a transaction made by user (at the same time, I'll have to extract the amount spent from the budget and add the amount
to the category type for that transaction).
3. Total amount spent on a transaction (sum of each element from Items)
4. When a new transaction is made by an user and he adds a particular item to the expenses that he didn't want to spend money on again, it will be shown a warning message to be careful in the future. (Adding a boolean type for that item at first encounter to check if it is an unwanted consumption). Also for exceeding limit for a specific category.
5. Checks after an update on goalExpenses if totalAmountSpent > desiredAmount (this means when a new transaction is added).
6. Set a cap for each category (example: I want to consume maximum 500 for food each month) -> update on category table.
7. Reset at the end of the month and store a history in database. (not for now, future development)


Model transactions:
1. One-To-Many: User -> Transaction
2. One-To-One: User -> GoalExpense
3. One-to-Many: Transaction -> Item